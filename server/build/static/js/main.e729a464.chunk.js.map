{"version":3,"sources":["store/actions/actions.js","store/actions/action_types.js","utils/history.js","utils/authcheck.js","containers/container1.js","containers/header.js","containers/profile.js","containers/form1.js","containers/renderlist.js","functional/component1.js","functional/callback.js","functional/privatecomponent.js","functional/unauthredirect.js","functional/home.js","functional/renderlistitem.js","functional/signup.js","blog/AddPost.js","blog/EditPost.js","blog/Posts.js","blog/ShowPost.js","profile/ShowUser.js","profile/SendMessage.js","profile/ReplyMessage.js","profile/ShowMessages.js","routes.js","utils/auth.js","App.js","store/reducers/reducer1.js","store/reducers/auth_reducer.js","store/reducers/posts_reducer.js","store/reducers/user_reducer.js","store/reducers/index.js","index.js"],"names":["SUCCESS","type","FAILURE","success","failure","user_input","text","payload","login_success","login_failure","add_profile","profile","remove_profile","set_db_profile","remove_db_profile","set_db_posts","posts","fetch_post_comments","comments","fetch_user_posts","fetch_search_posts","remove_search_posts","set_other_user_db_profile","set_other_user_db_posts","set_user_messages","messages","createBrowserHistory","AuthCheck","send_profile_to_db","axios","post","then","get","params","email","res","props","data","history","replace","catch","err","console","error","this","auth","isAuthenticated","userProfile","Component","connect","state","dispatch","ACTIONS","Container1","onClick","log","stateprop1","action1","action2","action_creator1","action_creator2","user_text","reducer1","user_reducer","Header","to","style","padding","is_authenticated","logout","login","auth_reducer","Profile","RenderProfile","nickname","src","picture","alt","name","email_verified","RenderPosts","Card","width","height","marginBottom","paddingBottom","CardHeader","title","pathname","id","subheader","className","date_created","pid","handleClickOpen","CardContent","overflow","body","post_id","setState","open","handleClickClose","deletePost","delete","setTimeout","replaceState","user_id","db_profile","uid","set_user_posts","Button","variant","color","user_posts","map","key","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","posts_reducer","Form1","value","handleChange","event","target","handleSubmit","preventDefault","input_action_creator","onSubmit","onChange","RenderList","items","num","bool","list_item","marginTop","Component1","Callback","PrivateComponent","UnauthRedirect","Home","RenderListItem","location","Signup","size","AddPost","e","username","TextField","label","margin","multiline","rows","EditPost","handleTitleChange","handleBodyChange","put","row","goBack","Posts","handleTransition","opacity","addPostsToState","num_posts","length","page_range","slice_posts","animate_posts","indexOfLastPost","activePage","posts_per_page","indexOfFirstPost","posts_slice","slice","posts_motion","i","handlePageChange","pageNumber","addSearchPostsToState","posts_search","animateSearchPosts","posts_search_motion","handleSearch","search_query","search_posts","RenderPost","moment","format","paddingLeft","textDecoration","author","likes","transition","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","ShowPost","RenderComment","comment","delete_comment_id","cid","cur_user_id","addCommentsToState","animateComments","comments_motion","handleCommentSubmit","submitted_comment","handleCommentUpdate","commentIndex","findIndex","item","newArr","handleCommentDelete","filter","handleUpdate","edited_comment","isEdited","handleDelete","Math","floor","random","window","scroll","top","left","behavior","handleLikes","like_user_id","includes","like_post","cursor","ShowUser","OtherUserDBProfile","Array","from","db_other_user_posts","SendMessage","message_sender","message_recipient","message_title","message_body","ReplyMessage","message","ShowMessages","RenderMessages","TableRow","TableCell","DeleteMessage","mid","Table","TableHead","TableBody","user_messages","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","authorize","handleAuth","parseHash","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","getAccessToken","getItem","client","userInfo","removeItem","parse","PrivateRoute","component","render","Routes","exact","path","hash","handleAuthentication","App","hello","asyncFetch","a","async","fetch","json","initialState","Reducer1","action","AuthReducer","PostsReducer","UserReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e729a464.chunk.js","sourcesContent":["import * as ACTION_TYPES from './action_types'\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS\r\n}\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE\r\n}\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS\r\n  }\r\n}\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE\r\n  }\r\n}\r\n\r\nexport const user_input = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT,\r\n    payload: text\r\n  }\r\n}\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS\r\n  }\r\n}\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE\r\n  }\r\n}\r\n\r\nexport const add_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.ADD_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE\r\n  }\r\n}\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE\r\n  }\r\n}\r\n\r\nexport const set_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_POSTS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS\r\n  }\r\n}\r\n\r\nexport const fetch_post_comments = (comments) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_POST_COMMENTS,\r\n    payload: comments\r\n  }\r\n}\r\n\r\nexport const remove_post_comments = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_POST_COMMENTS\r\n  }\r\n}\r\n\r\nexport const fetch_user_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_USER_POSTS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_user_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_USER_POSTS\r\n  }\r\n}\r\n\r\nexport const fetch_search_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.SEARCH_POSTS_SUCCESS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_search_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.SEARCH_POSTS_FAILURE,\r\n  }\r\n}\r\n\r\nexport const set_other_user_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_OTHER_USER_DB_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_other_user_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE\r\n  }\r\n}\r\n\r\nexport const set_other_user_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_OTHER_USER_DB_POSTS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_other_user_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS,\r\n  }\r\n}\r\n\r\nexport const set_user_messages = (messages) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_USER_MESSAGES,\r\n    payload: messages\r\n  }\r\n}\r\n\r\nexport const remove_user_messages = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_USER_MESSAGES,\r\n  }\r\n}\r\n","export const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const USER_INPUT = \"USER_INPUT\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const ADD_PROFILE = \"ADD_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const SET_DB_POSTS = \"SET_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n\r\nexport const FETCH_POST_COMMENTS = \"FETCH_POST_COMMENTS\"\r\n\r\nexport const REMOVE_POST_COMMENTS = \"REMOVE_POST_COMMENTS\"\r\n\r\nexport const FETCH_USER_POSTS = \"FETCH_USER_POSTS\"\r\n\r\nexport const REMOVE_USER_POSTS = \"REMOVE_USER_POSTS\"\r\n\r\nexport const SEARCH_POSTS_SUCCESS = \"SEARCH_POSTS_SUCCESS\"\r\n\r\nexport const SEARCH_POSTS_FAILURE = \"SEARCH_POSTS_FAILURE\"\r\n\r\nexport const SET_OTHER_USER_DB_PROFILE = \"SET_OTHER_USER_DB_PROFILE\"\r\n\r\nexport const REMOVE_OTHER_USER_DB_PROFILE = \"REMOVE_OTHER_USER_DB_PROFILE\"\r\n\r\nexport const SET_OTHER_USER_DB_POSTS = \"SET_OTHER_USER_DB_POSTS\"\r\n\r\nexport const REMOVE_OTHER_USER_DB_POSTS = \"REMOVE_OTHER_USER_DB_POSTS\"\r\n\r\nexport const SET_USER_MESSAGES = \"SET_USER_MESSAGES\"\r\n\r\nexport const REMOVE_USER_MESSAGES = \"REMOVE_USER_MESSAGES\"\r\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()\r\n","import React, { Component } from 'react';\r\nimport history from './history';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nclass AuthCheck extends Component {\r\n  // Grabs profile from redux to send to database\r\n  // Then makes request immediately to get from database by checking user's email\r\n  // Then set the user profile from the database to the redux store\r\n  send_profile_to_db = (profile) => {\r\n    axios.post('/api/post/userprofiletodb', profile)\r\n      .then(() => axios.get('/api/get/userprofilefromdb', { params: { email: profile.profile.email } })\r\n        .then(res => this.props.set_db_profile(res.data)))\r\n      .then(history.replace('/'))\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated()) {\r\n      this.props.login_success()\r\n      this.props.add_profile(this.props.auth.userProfile)\r\n      this.send_profile_to_db(this.props.auth.userProfile)\r\n      history.replace('/')\r\n    }\r\n    else {\r\n      this.props.login_failure()\r\n      this.props.remove_profile()\r\n      this.props.remove_db_profile()\r\n      history.replace('/')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    login_success: () => dispatch(ACTIONS.login_success()),\r\n    login_failure: () => dispatch(ACTIONS.login_failure()),\r\n    add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n    remove_profile: () => dispatch(ACTIONS.remove_profile()),\r\n    set_db_profile: (profile) => dispatch(ACTIONS.set_db_profile(profile)),\r\n    remove_db_profile: () => dispatch(ACTIONS.remove_db_profile())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthCheck);\r\n","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Container1 extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={() => console.log(this.props.stateprop1)}> Get State </button>\r\n        <button onClick={() => this.props.action1()}> Dispatch Action 1 </button>\r\n        <button onClick={() => this.props.action2()}>Dispatch Action 2 </button>\r\n        <button onClick={() => this.props.action_creator1()}>Dispatch Action Creator 1 </button>\r\n        <button onClick={() => this.props.action_creator2()}>Dispatch Action Creator 2 </button>\r\n        {this.props.user_text\r\n          ? <h3> {this.props.user_text} </h3>\r\n          : <h3> No User Text </h3>\r\n        }\r\n        <br />\r\n        {this.props.stateprop1\r\n          ? <p> stateprop1 is true </p>\r\n          : <p> stateprop1 is false </p>\r\n        }\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateprop1: state.reducer1.stateprop1,\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    action1: () => dispatch(ACTIONS.SUCCESS),\r\n    action2: () => dispatch(ACTIONS.FAILURE),\r\n    action_creator1: () => dispatch(ACTIONS.success()),\r\n    action_creator2: () => dispatch(ACTIONS.failure())\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container1);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to='/' style={{ padding: '5px' }}>\r\n          Home\r\n          </Link>\r\n        <Link to='/profile' style={{ padding: '5px' }}>\r\n          Profile\r\n          </Link>\r\n        <Link to='/posts' style={{ padding: '5px' }}>\r\n          Posts\r\n          </Link>\r\n        <Link to='/component1' style={{ padding: '5px' }}>\r\n          Component 1\r\n          </Link>\r\n        <Link to='/container1' style={{ padding: '5px' }}>\r\n          Container 1\r\n          </Link>\r\n        <Link to='/form1' style={{ padding: '5px' }}>\r\n          Form 1\r\n          </Link>\r\n        <Link to='/renderlist' style={{ padding: '5px' }}>\r\n          List\r\n          </Link>\r\n        <Link to='/privateroute' style={{ padding: '5px' }}>\r\n          Private Route\r\n          </Link>\r\n        {!this.props.is_authenticated\r\n          ? <button onClick={() => this.props.auth.login()}>Login</button>\r\n          : <button onClick={() => this.props.auth.logout()}>Logout</button>\r\n        }\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    is_authenticated: state.auth_reducer.is_authenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport * as ACTIONS from '../store/actions/actions'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\nimport history from '../utils/history'\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      post_id: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user_id = this.props.db_profile[0].uid\r\n    axios.get('/api/get/userposts', { params: { user_id } })\r\n      .then(res => this.props.set_user_posts(res.data))\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  RenderProfile = (props) => (\r\n    <div>\r\n      <h1>{props.profile.profile.nickname}</h1>\r\n      <br />\r\n      <img src={props.profile.profile.picture} alt=\"\" />\r\n      <br />\r\n      <h4> {props.profile.profile.email}</h4>\r\n      <br />\r\n      <h5> {props.profile.profile.name} </h5>\r\n      <br />\r\n      <h6> Email Verified: {props.profile.profile.email_verified ? <p>Yes</p> : <p>No</p>}</h6>\r\n      <br />\r\n    </div>\r\n  )\r\n\r\n  RenderPosts = (post) => (\r\n    <Card style={{ width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px' }}>\r\n      <CardHeader\r\n        title={\r\n          <Link to={{ pathname: '/post' + post.post.id, state: { post } }}>\r\n            {post.post.title}\r\n          </Link>\r\n        }\r\n        subheader={\r\n          <div className=\"FlexColumn\">\r\n            <div className=\"FlexRow\">\r\n              {post.post.date_created}\r\n            </div>\r\n            <div className=\"FlexRow\">\r\n              <Link to={{ pathname: '/editpost/' + post.post.pid, state: { post } }}>\r\n                <button>Edit</button>\r\n              </Link>\r\n              <button onClick={() => this.handleClickOpen(post.post.pid)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n      <br />\r\n      <CardContent>\r\n        <span style={{ overflow: 'hidden' }}>{post.post.body}</span>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n\r\n  handleClickOpen = (post_id) => {\r\n    this.setState({ open: true, post_id })\r\n  }\r\n\r\n  handleClickClose = () => {\r\n    this.setState({ open: false, post_id: null })\r\n  }\r\n\r\n  deletePost = () => {\r\n    const post_id = this.state.post_id\r\n    axios.delete('api/delete/postcomments', { data: { post_id } })\r\n      .then(() => axios.delete('/api/delete/post', { data: { post_id } }))\r\n      .then(res => console.log(res))\r\n      .catch(err => console.error(err))\r\n      .then(() => this.handleClickClose())\r\n      .then(() => setTimeout(() => history.replaceState('/'), 700))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <this.RenderProfile profile={this.props.profile} />\r\n        </div>\r\n        <div>\r\n          <Link to={{ pathname: \"/showmessages/\" + this.props.db_profile[0].uid }}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Show Messages\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          {this.props.user_posts ? (\r\n            this.props.user_posts.map(post => <this.RenderPosts post={post} key={post.pid} />)\r\n          ) : ''}\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClickClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Confirm Delete?</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\" >\r\n              Deleting Post\r\n            </DialogContentText>\r\n            <DialogActions>\r\n              <Button onClick={() => { this.deletePost() }}>\r\n                Agree\r\n              </Button>\r\n              <Button onClick={() => this.handleClickClose()}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profile: state.auth_reducer.profile,\r\n    user_posts: state.posts_reducer.user_posts,\r\n    db_profile: state.auth_reducer.db_profile\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    set_user_posts: (posts) => dispatch(ACTIONS.fetch_user_posts(posts))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\r\n","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Form1 extends Component {\r\n\r\n  state ={\r\n    value: ''\r\n  }\r\n\r\n  handleChange = (event) => (\r\n    this.setState({value: event.target.value})\r\n  )\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.input_action_creator(event.target.name.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label> Input </label>\r\n          <input id=\"name\" onChange={this.handleChange} type=\"text\" />\r\n          <button type=\"submit\"> Submit </button>\r\n        </form>\r\n        <br />\r\n        <h3>React State:</h3>\r\n        <p>{this.state.value}</p>\r\n        <br />\r\n        <h3>Redux State:</h3>\r\n        <p>{this.props.user_text}</p>\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    input_action_creator: (text) => dispatch(ACTIONS.user_input(text))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form1);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass RenderList extends Component {\r\n  state = {\r\n      items:\r\n        [\r\n          {id: 1, text: \"text 1\", num: 10, bool: true },\r\n          {id: 2, text: \"text 2\", num: 20, bool: false },\r\n          {id: 3, text: \"text 3\", num: 30, bool: true }\r\n        ]\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      {this.state.items.map(list_item =>\r\n        <div key={list_item.id}>\r\n          <Link to={{pathname:'/listitem/' + list_item.id, state:{list_item} }} style={{marginTop: '25px', padding: '5px'}}>\r\n            List Item {list_item.id}\r\n          </Link>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        )}\r\n      </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(RenderList);\r\n","import React from 'react'\r\n\r\nconst Component1 = props => (\r\n    <div>\r\n    Component 1\r\n    {console.log(props)}\r\n    </div>\r\n);\r\n\r\nexport default Component1;\r\n","import React from 'react'\r\n\r\nconst Callback = props => (\r\n    <div>\r\n      Callback\r\n    </div>\r\n);\r\n\r\nexport default Callback;\r\n","import React from 'react'\r\n\r\nconst PrivateComponent = props => (\r\n    <div>\r\n      Private Component\r\n    </div>\r\n);\r\n\r\nexport default PrivateComponent;\r\n","import React from 'react'\r\n\r\nconst UnauthRedirect = props => (\r\n    <div>\r\n      UnauthRedirect\r\n    </div>\r\n);\r\n\r\nexport default UnauthRedirect;\r\n","import React from 'react'\r\n\r\nconst Home = props => (\r\n  <div>\r\n    <h1>Home</h1>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\n\r\nconst RenderListItem = props => (\r\n    <div>\r\n      <h3>{props.location.state.list_item.text}</h3>\r\n      <h4> {props.location.state.list_item.num} </h4>\r\n      <div>{props.location.state.list_item.bool\r\n              ? <p>Boolean is True</p>\r\n              : <p>Boolean is False</p>\r\n            }\r\n      </div>\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\nexport default RenderListItem;\r\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nconst Signup = (props) => (\n  <div>\n    <h1>Signup and create an account</h1>\n    <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.auth.login()}>Signup</Button>\n  </div>\n)\n\nexport default Signup\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport history from '../utils/history'\nimport TextField from '@material-ui/core/TextField'\nimport { connect } from 'react-redux'\n\nclass AddPost extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const uid = this.props.db_profile[0].uid\n    const username = this.props.db_profile[0].username\n    const data = {\n      title: e.target.title.value,\n      body: e.target.body.value,\n      username,\n      uid,\n    }\n\n    axios.post('/api/post/posttodb', data)\n      .then(res => console.log(res))\n      .then(setTimeout(() => history.replace('/', 700)))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            id=\"title\"\n            label=\"Title\"\n            margin=\"normal\"\n          />\n          <br />\n          <TextField\n            id=\"body\"\n            label=\"Body\"\n            multiline\n            rows=\"4\"\n            margin=\"normal\"\n          />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <br />\n        <button onClick={() => history.replace('/posts')}>Cancel</button>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    db_profile: state.auth_reducer.db_profile\n  }\n}\n\nexport default connect(mapStateToProps)(AddPost)\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport history from '../utils/history'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { connect } from 'react-redux'\n\nclass EditPost extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      body: '',\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      title: this.props.location.state.post.post.title,\n      body: this.props.location.post.post.body\n    })\n  }\n\n  handleTitleChange = (e) => {\n    this.setState({ title: e.target.value })\n  }\n\n  handleBodyChange = (e) => {\n    this.setState({ body: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const user_id = this.props.db_profile[0].uid\n    const username = this.props.db_profile[0].username\n    const pid = this.props.location.state.post.post.pid\n    const title = e.target.title.value\n    const body = e.target.body.value\n    const data = { title, body, pid, uid: user_id, username }\n\n    axios.put(\"/apit/put/post\", data)\n      .then(res => console.log(res))\n      .then(setTimeout(() => history.replace('/profile'), 700))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} >\n          <TextField\n            id='title'\n            label='Title'\n            margin='normal'\n            value={this.state.title}\n            onChange={this.handleTitleChange}\n          />\n          <TextField\n            id='body'\n            label='Bitle'\n            margin='normal'\n            multiline\n            row=\"4\"\n            value={this.state.body}\n            onChange={this.handleBodyChange}\n          />\n          <Button type=\"submit\">Submit</Button>\n        </form>\n        <Button onClick={() => history.goBack()}>Cancel</Button>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport * as ACTIONS from '../store/actions/actions'\nimport axios from 'axios'\nimport Pagination from 'react-js-pagination'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport TextField from '@material-ui/core/TextField'\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: [],\n      opacity: 0,\n      num_posts: 0,\n      page_range: 0,\n      activePage: 1,\n      posts_per_page: 5,\n      posts_slice: [],\n      posts_motion: [],\n      posts_search: [],\n      posts_search_motion: [],\n    }\n  }\n\n  componentDidMount() {\n    this.handleTransition()\n    axios.get('/api/get/allposts')\n      .then(res => this.props.set_db_posts(res.data))\n      .then(() => this.addPostsToState(this.props.posts))\n      .catch(err => console.error(err))\n  }\n\n  handleTransition = () => {\n    setTimeout(() => this.setState({ opacity: 1 }), 400)\n  }\n\n  // POSTS FEATURE\n  addPostsToState = (posts) => {\n    this.setState({ posts: [...posts] })\n    this.setState({\n      num_posts: this.state.posts.length,\n      page_range: this.state.num_posts / 5\n    })\n\n    this.slice_posts()\n    this.animate_posts()\n  }\n\n  slice_posts = () => {\n    const indexOfLastPost = this.state.activePage * this.state.posts_per_page\n    const indexOfFirstPost = indexOfLastPost - this.state.posts_per_page\n\n    this.setState({ posts_slice: this.state.posts.slice(indexOfFirstPost, indexOfLastPost) })\n  }\n\n  animate_posts = () => {\n    this.setState({ posts_motion: [] })\n    let i = 1\n    return this.state.posts_slice.map(post => {\n      setTimeout(() => this.setState({ posts_motion: [...this.state.posts_motion, post] }), 400 * i);\n      return i++;\n    })\n  }\n\n  handlePageChange = (pageNumber) => {\n    this.setState({ activePage: pageNumber })\n\n    setTimeout(() => this.slice_posts(), 50)\n    setTimeout(() => this.animate_posts(), 100)\n  }\n\n  // SEARCH FEATURE\n  addSearchPostsToState = (posts) => {\n    this.setState({ posts_search: [] })\n    this.setState({ posts_search: [...posts] })\n\n    this.animateSearchPosts()\n  }\n\n  animateSearchPosts = () => {\n    this.setState({ posts_search_motion: [] })\n    let i = 1\n    return this.state.posts_search.map(post => {\n      setTimeout(() => this.setState({ posts_search_motion: [...this.state.posts_search_motion, post] }), 400 * i);\n      return i++;\n    })\n  }\n\n  handleSearch = (e) => {\n    const search_query = e.target.value\n\n    axios.get('/api/get/searchpost', { params: { search_query: search_query } })\n      .then(res => this.props.fetch_search_posts(res.data))\n      .then(() => this.addSearchPostsToState(this.props.search_posts))\n      .catch(err => console.error(err))\n  }\n\n  RenderPost = post => (\n    <div className=\"CardStyles\">\n      <Card style={{ width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px' }}>\n        <CardHeader\n          title={\n            <Link to={{ pathname: '/post/' + post.post.pid, state: { post } }}>\n              {post.post.title}\n            </Link>\n          }\n          subheader={\n            <div className=\"FlexColumn\">\n              <div className=\"FlexRow\">\n                {moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a')}\n                <br />\n                <Link style={{ paddingLeft: '5px', textDecoration: 'none' }}\n                  to={{ pathname: '/user/' + post.post.author, state: { post } }}>\n                  By: {post.post.author}\n                </Link>\n              </div>\n              <div className=\"FlexRow\">\n                <i className=\"material-icons\">thumb_up</i>\n                <div className=\"notification-num-posts\">\n                  {post.post.likes}\n                </div>\n              </div>\n            </div>\n          }\n        />\n        <br />\n        <CardContent>\n          <span style={{ overflow: 'hidden' }}>{post.post.body}</span>\n        </CardContent>\n      </Card>\n    </div>\n  )\n\n  render() {\n    return (\n      <div>\n        <div style={{ opacity: this.state.opacity, transition: 'opacity 2s ease' }}>\n          <br />\n          {this.props.is_authenticated\n            ? (\n              <Link to=\"/addpost\">\n                <Button variant=\"contained\" color=\"primary\">Add Post</Button>\n              </Link>\n            ) : (\n              <Link to=\"/signup\">\n                <Button variant=\"contained\" color=\"primary\">Signup to add post</Button>\n              </Link>\n            )\n          }\n        </div>\n        <div>\n          <TextField\n            id=\"search\"\n            label=\"search\"\n            margin=\"normal\"\n            onChange={this.handleSearch}\n          />\n        </div>\n        <div>\n          {this.state.posts_search\n            ? this.state.posts_search_motion.map(post => <this.RenderPost key={post.pid} post={post} />)\n            : ''\n          }\n        </div>\n        <div style={{ opacity: this.state.opacity, transition: 'opacity 2s ease' }}>\n          <h1>Posts</h1>\n          <div>\n            {this.state.posts_motion ? (\n              this.state.posts_motion.map(post => <this.RenderPost id={post.pid} key={post.pid} post={post} />)\n            ) : ''}\n          </div>\n          <Pagination\n            activePage={this.state.activePage}\n            itemsCountPerPage={5}\n            totalItemsCount={this.state.num_posts}\n            pageRangeDisplayed={this.state.page_range}\n            onChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts_reducer.posts,\n    is_authenticated: state.auth_reducer.is_authenticated,\n    search_posts: state.posts_reducer.search_posts,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    set_db_posts: (posts) => dispatch(ACTIONS.set_db_posts(posts)),\n    fetch_search_posts: (posts) => dispatch(ACTIONS.fetch_search_posts(posts)),\n    remove_search_posts: () => dispatch(ACTIONS.remove_search_posts())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport history from '../utils/history'\nimport * as ACTIONS from '../store/actions/actions'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\n\nclass ShowPost extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      comment: '',\n      cid: '',\n      opacity: 0,\n      comments: [],\n      comments_motion: [],\n      delete_comment_id: 0,\n      likes: this.props.location.state.post.post.likes,\n      like_user_id: this.props.location.state.post.post.like_user_id,\n      like_post: true // Check if user can like a certain post\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/api/get/allpostcomments', { params: { post_id: this.props.location.state.post.post.pid } })\n      .then(res => this.props.fetch_post_comments(res.data))\n      .then(() => this.addCommentsToState(this.props.comments))\n      .catch(err => console.error(err))\n    this.handleTransition()\n\n    this.setState({ likes: this.props.location.state.post.post.likes, like_user_id: this.props.location.state.post.post.like_user_id })\n  }\n\n  // RENDER FUNCTIONS\n  RenderComment = (comment) => (\n    <div className={this.state.delete_comment_id === comment.comment.cid ? \"FadeOutComment\" : \"CommentStyles\"}>\n      <h3>{comment.comment.comment}</h3>\n      <small>{comment.comment.date_created === 'Just Now' ? <span>Edited</span> : <span>Just Now</span>}</small>\n      <p>By: {comment.comment.author}</p>\n      {comment.cur_user_id === comment.comment.user_id ? (\n        <Button onClick={() => this.handleClickOpen(comment.comment.id, comment.comment.comment)}>\n          Edit\n        </Button>\n      ) : ''}\n    </div>\n  )\n\n  // ANIMATION FUNCTIONS\n  handleTransition = () => {\n    setTimeout(() => this.setState({ opacity: 1 }), 400)\n  }\n\n  addCommentsToState = (comments) => {\n    this.setState({ comments: [...comments] })\n    this.animateComments()\n  }\n\n  animateComments = () => {\n    let i = 1\n    return this.state.comments.map(comment => {\n      setTimeout(() => this.setState({ comments_motion: [...this.state.comments_motion, comment] }), 400 * i)\n      return i++\n    })\n  }\n\n  handleCommentSubmit = (submitted_comment) => {\n    setTimeout(() => this.setState({\n      comments_motion: [submitted_comment, ...this.state.comments_motion]\n    }), 50)\n  }\n\n  handleCommentUpdate = (comment) => {\n    const commentIndex = this.state.comments_motion.findIndex(item => item.id === comment.cid)\n    let newArr = [...this.state.comments_motion]\n    newArr[commentIndex] = comment\n    this.setState({ comments_motion: newArr })\n  }\n\n  handleCommentDelete = (cid) => {\n    this.setState({ delete_comment_id: cid })\n    const newArr = this.state.comments_motion.filter(item => item.cid !== cid)\n    setTimeout(() => this.setState({ comments_motion: newArr }), 2000)\n  }\n\n  // FORM FUNCTIONS\n  handleClickOpen = (cid, comment) => {\n    this.setState({ open: true, comment, cid })\n  }\n\n  handleClickClose = () => {\n    this.setState({ open: false, comment: '', cid: '' })\n  }\n\n  handleChange = (e) => {\n    this.setState({ comment: e.target.value })\n  }\n\n  handleUpdate = () => {\n    const comment = this.state.comment\n    const cid = this.state.cid\n    const user_id = this.props.db_profile[0].uid\n    const post_id = this.props.location.state.post.post.pid\n    const username = this.props.db_profile[0].username\n    const date_created = \"Just Now\"\n    const data = { comment, cid, post_id, user_id, username }\n    const edited_comment = {\n      cid,\n      comment,\n      post_id,\n      user_id,\n      author: username,\n      date_created,\n      isEdited: true\n    }\n\n    axios.put('/api/put/commenttodb', data)\n      .then(res => console.log(res))\n      .catch(err => console.error(err))\n    this.handleCommentUpdate(edited_comment)\n  }\n\n  handleDelete = () => {\n    const cid = this.state.cid\n\n    axios.delete('/api/delete/commenttodb', { data: { cid } })\n      .then(res => console.log(res))\n      .catch(err => console.error(err))\n\n    this.handleCommentDelete(cid)\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.setState({ comment: '' })\n    const comment = e.target.comment.value\n    const user_id = this.props.db_profile[0].uid\n    const post_id = this.props.location.state.post.post.pid\n    const username = this.props.db_profile[0].username\n    const temp_cid = Math.floor(Math.random() * 100000000000)\n    const date_created = 'Just Now'\n\n    const data = { comment, post_id, user_id, username }\n    const submitted_comment = {\n      cid: temp_cid,\n      comment,\n      user_id,\n      author: username,\n      date_created\n    }\n\n    axios.post('/api/post/commenttodb', data)\n      .catch(err => console.error(err))\n    window.scroll({ top: 0, left: 0, behavior: 'smooth' })\n    this.handleCommentSubmit(submitted_comment)\n  }\n\n  handleLikes = () => {\n    const user_id = this.props.db_profile[0].uid\n    const post_id = this.props.location.state.post.post.pid\n    const data = { uid: user_id, post_id: post_id }\n\n    axios.put('/api/put/likes', data)\n      .then((!this.state.like_user_id.includes(user_id) && this.state.like_post)\n        ? this.setState({ likes: this.state.likes + 1 })\n        : '')\n      .then(this.setState({ like_post: false }))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    console.log(\"state\", this.state)\n    console.log(\"props\", this.props)\n    return (\n      <div>\n        <div>\n          <h2>Post</h2>\n          {/* <h4>{this.props.location.state.post.post.title}</h4>\n          <p>{this.props.location.state.post.post.body}</p>\n          <p>{this.props.location.state.post.post.author}</p> */}\n          <a style={{ cursor: 'pointer' }} onClick={this.props.is_authenticated ? () => this.handleLikes() : () => history.replace('/signup')}>\n            <i className='material-icons'>thumb_up</i>\n            <small className=\"notification-num-showpost\">{this.state.likes}</small>\n          </a>\n        </div>\n        <div style={{ opacity: this.state.opacity, transition: 'ease-out 2s' }}>\n          <h2>Comments:</h2>\n          {this.state.comments ? (\n            this.state.comments_motion.map(comment => (\n              <this.RenderComment\n                key={comment.cid}\n                comment={comment}\n                cur_user_id={this.props.db_profile[0].uid}\n              />\n            ))\n          ) : ''}\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"comment\"\n              label=\"Comment\"\n              margin=\"normal\"\n              value={this.state.comment}\n              onChange={this.handleChange}\n            />\n            <br />\n            {this.props.is_authenticated\n              ? (\n                <Button type=\"submit\">Submit</Button>\n              ) : (\n                <Link to=\"/signup\">\n                  <Button color=\"primary\" variant=\"contained\">\n                    Signup to comment\n                </Button>\n                </Link>\n              )\n\n            }\n          </form>\n        </div>\n        <div>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClickClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">Edit Comment</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\" >\n                <input type=\"text\" value={this.state.comment} onChange={this.handleChange} />\n              </DialogContentText>\n              <DialogActions>\n                <Button onClick={() => { this.handleUpdate(); this.setState({ open: false }) }}>\n                  Agree\n                </Button>\n                <Button onClick={() => this.handleClickClose()}>\n                  Cancel\n                </Button>\n                <Button onClick={() => this.handleDelete()}>\n                  Delete\n                </Button>\n              </DialogActions>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    comments: state.posts_reducer.comments,\n    db_profile: state.auth_reducer.db_profile,\n    is_authenticated: state.auth_reducer.is_authenticated\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetch_post_comments: (comments) => dispatch(ACTIONS.fetch_post_comments(comments))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPost)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport * as ACTIONS from '../store/actions/actions'\n\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Button from '@material-ui/core/Button'\n\nclass ShowUser extends Component {\n  componentDidMount() {\n    const username = this.props.location.state.post.post.author\n\n    axios.get('/api/get/otheruserprofilefromdb', { params: { username } })\n      .then(res => this.props.set_other_user_db_profile(res.data))\n      .catch(err => console.error(err))\n    axios.get('/api/get/otheruserposts', { params: { username } })\n      .then(res => this.props.set_other_user_db_posts(Array.from(res.data)))\n      .catch(err => console.error(err))\n    window.scroll({ top: 0, left: 0, behavior: 'smooth' })\n  }\n\n  RenderPosts = post => (\n    <div className=\"CardStyles\">\n      <Card style={{ width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px' }}>\n        <CardHeader\n          title={\n            <Link to={{ pathname: '/post/' + post.post.pid, state: { post } }}>\n              {post.post.title}\n            </Link>\n          }\n          subheader={\n            <div className=\"FlexColumn\">\n              <div className=\"FlexRow\">\n                {moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a')}\n                <br />\n                By: {post.post.author}\n              </div>\n              <div className=\"FlexRow\">\n                <i className=\"material-icons\">thumb_up</i>\n                <div className=\"notification-num-posts\">\n                  {post.post.likes}\n                </div>\n              </div>\n            </div>\n          }\n        />\n        <br />\n        <CardContent>\n          <span style={{ overflow: 'hidden' }}>{post.post.body}</span>\n        </CardContent>\n      </Card>\n    </div>\n  )\n\n  RenderProfile = (props) => (\n    <div>\n      <div className=\"FlexRow\">\n        <h1>{this.props.OtherUserDBProfile.username}</h1>\n      </div>\n      <div>\n        <Link to={{ pathname: '/sendmessage', state: { props } }}>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Send Message\n          </Button>\n        </Link>\n      </div>\n    </div>\n  )\n\n  render() {\n    return (\n      <div>\n        <div className=\"FlexRow\">\n          {this.props.OtherUserDBProfile\n            ? <this.RenderProfile profile={this.props.OtherUserDBProfile[0]} />\n            : ''}\n        </div>\n        <div>\n          <h3>Latest Activity:</h3>\n          <div>\n            {this.props.db_other_user_posts\n              ? this.props.db_other_user_posts.map(post =>\n                <div key={post.pid}>\n                  <this.RenderPosts post={post} />\n                  <br />\n                </div>\n              ) : ''}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    OtherUserDBProfile: state.user_reducer.OtherUserDBProfile,\n    db_other_user_posts: state.user_reducer.db_other_user_posts,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    set_other_user_db_profile: (profile) => dispatch(ACTIONS.set_other_user_db_profile(profile)),\n    set_other_user_db_posts: (posts) => dispatch(ACTIONS.set_other_user_db_posts(posts)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUser)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\n\nimport history from '../utils/history'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nclass SendMessage extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const message_sender = this.props.db_profile[0].username\n    const message_recipient = this.props.location.state.props.profile.username\n    const message_title = e.target.title.value\n    const message_body = e.target.body.value\n\n    const data = {\n      message_sender,\n      message_recipient,\n      message_title,\n      message_body\n    }\n\n    axios.post('/api/post/messagetodb', data)\n      .then(res => console.log(\"SendMessage.js\", res))\n      .then(setTimeout(() => history.replace('/'), 500))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            id=\"title\"\n            label=\"Title\"\n            margin=\"normal\"\n          />\n          <br />\n          <TextField\n            id=\"body\"\n            multiline\n            rows=\"4\"\n            margin=\"normal\"\n          />\n          <br />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n          <Button onClick={() => history.replace('/')}>\n            Cancel\n          </Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    db_profile: state.auth_reducer.db_profile,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SendMessage)\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { connect } from 'react-redux';\n\nimport history from '../utils/history'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nclass ReplyMessage extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const message_sender = this.props.db_profile[0].username\n    const message_recipient = this.props.location.state.props.message.message_sender\n    const message_title = e.target.title.value\n    const message_body = e.target.body.value\n\n    const data = {\n      message_sender,\n      message_recipient,\n      message_title,\n      message_body\n    }\n    console.log(\"replymessage data\", data)\n\n    axios.post('/api/post/messagetodb', data)\n      .then(res => console.log(\"Message was replied successfully.\"))\n      .then(setTimeout(() => history.replace('/'), 500))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Message:</h2>\n        <div className=\"FlexColumn\">\n          <div>\n            <p>Title: {this.props.location.state.props.message.message_title}</p>\n          </div>\n          <div>\n            <p>Body: {this.props.location.state.props.message.message_body}</p>\n          </div>\n          <div>\n            <p>Sender: {this.props.location.state.props.message.message_sender}</p>\n          </div>\n        </div>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"title\"\n              label=\"Title\"\n              margin=\"normal\"\n            />\n            <br />\n            <TextField\n              id=\"body\"\n              multiline\n              rows=\"4\"\n              margin=\"normal\"\n            />\n            <br />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Submit\n          </Button>\n            <Button onClick={() => history.replace('/')}>\n              Cancel\n          </Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    db_profile: state.auth_reducer.db_profile,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReplyMessage)\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport * as ACTIONS from '../store/actions/actions'\nimport history from '../utils/history'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nclass ShowMessages extends Component {\n  componentDidMount() {\n    const username = this.props.db_profile[0].username\n    axios.get('/api/get/usermessages', { params: { username: username } })\n      .then(res => this.props.set_user_messages(res.data))\n      .catch(err => console.error(err))\n  }\n\n  RenderMessages = (props) => (\n    <TableRow>\n      <TableCell>\n        <p>From: {props.message.message_sender}</p>\n        <p>Title: {props.message.message_title}</p>\n        <p>Message: {props.message.message_body}</p>\n        <small>{props.message.date_created}</small>\n        <Link to={{ pathname: '/replymessage', state: { props } }}>\n          <button>Reply</button>\n        </Link>\n        <button onClick={() => this.DeleteMessage(props.message.mid)}>Delete</button>\n        <br />\n        <br />\n        <button onClick={() => history.goBack()}>Cancel</button>\n      </TableCell>\n    </TableRow>\n  )\n\n  DeleteMessage = (mid) => {\n    axios.delete('/api/delete/usermessage', { data: { mid } })\n      .then(res => console.log(`Message ${mid} delete successfully.`))\n      .then(() => setTimeout(() => history.replace('/'), 500))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"FlexRow\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Messages</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.user_messages ? (\n                this.props.user_messages.map(message => <this.RenderMessages message={message} key={message.mid} />)\n              ) : ''}\n            </TableBody>\n          </Table>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    db_profile: state.auth_reducer.db_profile,\n    user_messages: state.user_reducer.user_messages,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    set_user_messages: (messages) => dispatch(ACTIONS.set_user_messages(messages))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowMessages)\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Router, Route, Switch, Redirect } from 'react-router';\r\n\r\nimport * as ACTIONS from './store/actions/actions';\r\nimport Auth from './utils/auth';\r\nimport AuthCheck from './utils/authcheck';\r\nimport history from './utils/history';\r\n\r\nimport Container1 from './containers/container1'\r\nimport Header from './containers/header';\r\nimport Profile from './containers/profile';\r\nimport Form1 from './containers/form1';\r\nimport RenderList from './containers/renderlist';\r\n\r\nimport Component1 from './functional/component1';\r\nimport Callback from './functional/callback';\r\nimport PrivateComponent from './functional/privatecomponent';\r\nimport UnauthRedirect from './functional/unauthredirect';\r\nimport Home from './functional/home';\r\nimport RenderListItem from './functional/renderlistitem';\r\nimport Signup from './functional/signup'\r\n\r\nimport AddPost from './blog/AddPost'\r\nimport EditPost from './blog/EditPost'\r\nimport Posts from './blog/Posts'\r\nimport ShowPost from './blog/ShowPost'\r\n\r\nimport ShowUser from './profile/ShowUser'\r\nimport SendMessage from './profile/SendMessage'\r\nimport ReplyMessage from './profile/ReplyMessage'\r\nimport ShowMessages from './profile/ShowMessages'\r\n\r\n\r\nexport const auth = new Auth()\r\n\r\nconst handleAuthentication = (props) => {\r\n  if (props.location.hash) {\r\n    auth.handleAuth()\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, auth }) => (\r\n  <Route render={props => auth.isAuthenticated() === true\r\n    ? <Component auth={auth} {...props} />\r\n    : <Redirect to={{ pathname: '/signup' }} />\r\n  }\r\n  />\r\n)\r\n\r\nclass Routes extends Component {\r\n  componentDidMount() {\r\n    if (auth.isAuthenticated()) {\r\n      this.props.login_success()\r\n      auth.getProfile()\r\n      setTimeout(() => { this.props.add_profile(auth.userProfile) }, 400)\r\n    }\r\n    else {\r\n      this.props.login_failure()\r\n      this.props.remove_profile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history} >\r\n          <div>\r\n            <Header auth={auth} />\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route exact path='/form1' component={Form1} />\r\n              <Route exact path='/container1' render={() => <Container1 auth={auth} />} />\r\n              <Route path='/authcheck' render={() => <AuthCheck auth={auth} />} />\r\n              <Route path='/redirect' component={UnauthRedirect} />\r\n              <Route path='/renderlist' component={RenderList} />\r\n              <Route path='/signup' render={() => <Signup auth={auth} />} />\r\n\r\n              <Route path='/user/:uid' component={ShowUser} />\r\n              <PrivateRoute path=\"/sendmessage\" auth={auth} component={SendMessage} />\r\n              <PrivateRoute path=\"/replymessage\" auth={auth} component={ReplyMessage} />\r\n              <PrivateRoute path=\"/showmessages/:id\" auth={auth} component={ShowMessages} />\r\n\r\n              <Route path='/addpost' component={AddPost} />\r\n              <Route path='/editpost/:pid' component={EditPost} />\r\n              <Route path='/posts' component={Posts} />\r\n              <Route path='/post/:pid' component={ShowPost} />\r\n\r\n              <Route path='/callback' render={(props) => { handleAuthentication(props); return <Callback /> }} />\r\n              <Route path=\"/component1\" render={(props) => <Component1 {...props} />} />\r\n\r\n              <Route path=\"/listitem/:id\" component={RenderListItem} />\r\n\r\n              <PrivateRoute path=\"/privateroute\" auth={auth} component={PrivateComponent} />\r\n              <PrivateRoute path=\"/profile\" auth={auth} component={Profile} />\r\n\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    login_success: () => dispatch(ACTIONS.login_success()),\r\n    login_failure: () => dispatch(ACTIONS.login_failure()),\r\n    add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n    remove_profile: () => dispatch(ACTIONS.remove_profile())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Routes);\r\n","import auth0 from 'auth0-js'\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'timh1203.auth0.com',\r\n    clientID: 'QGce2RCyo8epuX1i7sSips9EipGt79lD', // reactapp2019\r\n    // clientID: 'bUOZu5FuuNTzk1eBxJGMs6xQC750T1dU', // reactadminapp2019\r\n    // redirectUri: 'http://localhost:3000/callback',\r\n    redirectUri: 'http://13.58.58.171/callback',\r\n    responseType: 'token id_token',\r\n    scope: 'openid profile email'\r\n  })\r\n\r\n  userProfile = {}\r\n\r\n  login = () => {\r\n    this.auth0.authorize()\r\n  }\r\n\r\n  handleAuth = () => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if (authResult) {\r\n        localStorage.setItem('access_token', authResult.accessToken)\r\n        localStorage.setItem('id_token', authResult.idToken)\r\n\r\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()))\r\n        localStorage.setItem('expiresAt', expiresAt)\r\n\r\n        this.getProfile();\r\n        setTimeout(() => { history.replace('/authcheck') }, 2000);\r\n      } else {\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccessToken = () => {\r\n    if (localStorage.getItem('access_token')) {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      return accessToken\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n\r\n  getProfile = () => {\r\n    let accessToken = this.getAccessToken()\r\n    if (accessToken) {\r\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n        if (profile) {\r\n          this.userProfile = { profile }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('access_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('expiresAt')\r\n    setTimeout(() => { history.replace('/authcheck') }, 200);\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Routes from './routes';\nimport './App.css'\n\n// const axiosInstance = axios.create({\n//   baseURL: \"https://jsonplaceholder.typicode.com\"\n// })\n\nclass App extends Component {\n  state = {\n    hello: null\n  }\n\n  componentDidMount() {\n    // API call via local server\n    axios.get('/hello')\n      .then(res => this.setState({ hello: res.data }))\n      .catch(error => console.error(error))\n\n    // API call via Axios\n    // axiosInstance.get('/posts')\n    //   .then(res => console.log(\"From axios:\", res.data))\n    //   .catch(error => console.error(error))\n\n    // API call via fetch\n    // this.asyncFetch()\n  }\n\n  asyncFetch = async () => {\n    await fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(res => res.json())\n      .then(json => console.log(\"From fetch:\", json))\n      .catch(error => console.error(error))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Routes />\n        {this.state.hello\n          ? <div>{this.state.hello}</div>\n          : ''}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  stateprop1: false,\r\n}\r\n\r\nconst Reducer1 = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.SUCCESS:\r\n        return {\r\n          ...state,\r\n          stateprop1: true\r\n        }\r\n      case ACTION_TYPES.FAILURE:\r\n        return {\r\n          ...state,\r\n          stateprop1: false\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default Reducer1;\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  is_authenticated: false,\r\n  profile: null,\r\n  db_profile: null\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        is_authenticated: true\r\n      }\r\n    case ACTION_TYPES.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        is_authenticated: false\r\n      }\r\n    case ACTION_TYPES.ADD_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null\r\n      }\r\n    case ACTION_TYPES.SET_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        db_profile: action.payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        db_profile: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AuthReducer;\r\n","import * as ACTION_TYPES from '../actions/action_types'\n\nconst initialState = {\n  posts: [],\n  comments: [],\n  user_posts: [],\n  search_posts: []\n}\n\nconst PostsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SET_DB_POSTS:\n      return {\n        ...state,\n        posts: action.payload\n      }\n    case ACTION_TYPES.REMOVE_DB_POSTS:\n      return {\n        ...state,\n        posts: []\n      }\n    case ACTION_TYPES.FETCH_POST_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload\n      }\n    case ACTION_TYPES.REMOVE_POST_COMMENTS:\n      return {\n        ...state,\n        comments: []\n      }\n    case ACTION_TYPES.FETCH_USER_POSTS:\n      return {\n        ...state,\n        user_posts: action.payload\n      }\n    case ACTION_TYPES.REMOVE_USER_POSTS:\n      return {\n        ...state,\n        user_posts: []\n      }\n    case ACTION_TYPES.SEARCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        search_posts: action.payload\n      }\n    case ACTION_TYPES.SEARCH_POSTS_FAILURE:\n      return {\n        ...state,\n        search_posts: []\n      }\n    default:\n      return state\n  }\n}\n\nexport default PostsReducer;\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  user_text: '',\r\n  OtherUserDBProfile: null,\r\n  db_other_user_posts: [],\r\n  user_messages: [],\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.USER_INPUT:\r\n      return {\r\n        ...state,\r\n        user_text: action.payload\r\n      }\r\n    case ACTION_TYPES.SET_OTHER_USER_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        OtherUserDBProfile: action.payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE:\r\n      return {\r\n        ...state,\r\n        OtherUserDBProfile: null\r\n      }\r\n    case ACTION_TYPES.SET_OTHER_USER_DB_POSTS:\r\n      return {\r\n        ...state,\r\n        db_other_user_posts: action.payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS:\r\n      return {\r\n        ...state,\r\n        db_other_user_posts: []\r\n      }\r\n    case ACTION_TYPES.SET_USER_MESSAGES:\r\n      return {\r\n        ...state,\r\n        user_messages: action.payload\r\n      }\r\n    case ACTION_TYPES.REMOVE_USER_MESSAGES:\r\n      return {\r\n        ...state,\r\n        user_messages: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default UserReducer;\r\n","import Reducer1 from './reducer1'\r\nimport AuthReducer from './auth_reducer';\r\nimport PostsReducer from './posts_reducer';\r\nimport UserReducer from './user_reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  reducer1: Reducer1,\r\n  auth_reducer: AuthReducer,\r\n  posts_reducer: PostsReducer,\r\n  user_reducer: UserReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware()\n));\n\nReactDOM.render(<Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}